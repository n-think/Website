@{
    ViewData["Title"] = "Users";
    ViewData.AddActivePage(AdminNavPages.Users);
}

@model UsersViewModel

<form asp-action="Users" method="get">
    <div class="form-inline form-group">
        <input class="form-control mr-2 mb-1" placeholder="Поиск аккаунтов" type="text" name="s" value="@Model.CurrentSearch" />
        @Html.DropDownList("st", Html.GetEnumSelectList<RoleSelector>(), null, new { @class = "form-control mr-2 mb-1", onchange = "this.form.submit()" })
        <a class="btn btn-outline-secondary" asp-action="Users">Сброс</a>
    </div>
</form>
<div class="table-responsive">
    <table id="user-table" class="table responsive-table">
        <thead>
            <tr>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="Email" content="@Html.DisplayNameFor(x => x.Users.First().Email)" />
                </th>
                <th scope="col">@Html.DisplayNameFor(x => x.Users.First().PhoneNumber)</th>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="LastName" content="@Html.DisplayNameFor(x => x.Users.First().UserProfile.LastName)" />
                </th>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="FirstName" content="@Html.DisplayNameFor(x => x.Users.First().UserProfile.FirstName)" />
                </th>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="PatrName" content="@Html.DisplayNameFor(x => x.Users.First().UserProfile.PatrName)" />
                </th>
                <th scope="col">@Html.DisplayNameFor(x => x.Users.First().UserProfile.City)</th>
                <th scope="col">Количество заказов</th>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="RegistrationDate" content="@Html.DisplayNameFor(x => x.Users.First().UserProfile.RegistrationDate)" />
                </th>
                <th scope="col">
                    <sort-header action="Users" search="@Model.CurrentSearch" selector="@Model.Roles" descending="@Model.Descending" current="@Model.CurrentSortOrder"
                                 property="LastActivityDate" content="@Html.DisplayNameFor(x => x.Users.First().LastActivityDate)" />
                </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@Html.DisplayFor(m => user.Email)</td>
                    <td>@Html.DisplayFor(m => user.PhoneNumber)</td>
                    <td>@Html.DisplayFor(m => user.UserProfile.LastName)</td>
                    <td>@Html.DisplayFor(m => user.UserProfile.FirstName)</td>
                    <td>@Html.DisplayFor(m => user.UserProfile.PatrName)</td>
                    <td>@Html.DisplayFor(m => user.UserProfile.City)</td>
                    <td>100500</td>
                    <td>
                        @if (user.UserProfile.RegistrationDate.HasValue)
                        {
                            @Html.DisplayFor(m => user.UserProfile.RegistrationDate.Value.DateTime)
                        }
                    </td>
                    <td>
                        @if (user.LastActivityDate.HasValue)
                        {
                            @Html.DisplayFor(m => user.LastActivityDate.Value.DateTime)
                        }
                    </td>
                    <td>
                        <a class="btn btn-outline-primary btn-sm" asp-action="ViewUser" asp-route-id="@user.Id">Подробнее</a>
                        <a class="btn btn-outline-primary btn-sm" asp-action="EditUser" asp-route-id="@user.Id"><span class="fa fa-pencil"></span></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<page-link current-page="@Model.CurrentPage" search="@Model.CurrentSearch" selector="@Model.Roles" current-prop="@Model.CurrentSortOrder"
           items-count="@Model.ItemCount" items-per-page="@Model.CountPerPage" action="Users" />
