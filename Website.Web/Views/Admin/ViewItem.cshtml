@{
    ViewData["Title"] = "Просмотр товара";
}
@using Castle.Core.Internal
@using Website.Web.Models.DTO
@using Website.Web.Infrastructure.TreeHelper
@model ItemViewModel
<div class="mb-2">
    <span class="h2 d-inline-block">Просмотр товара</span>
    <a class="btn btn-outline-primary mx-2" asp-action="EditItem" asp-route-id="@Model.Id">Редактировать</a>
</div>
@if (!(TempData["Message"] as string).IsNullOrEmpty())
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<div class="row">
    <div class="col-md-7">
        <div>
            <div class="admin-img-box">
                <img id="admin-image-view" src="@Url.Action("FullSize", "Images", Model.Images?.FirstOrDefault(x => x.Primary)?.Id)" alt="Нет изображения"/>
                <span></span>
            </div>
            <div id="image-container" class="admin-img-thumbs">
                @foreach (var item in Model.Images ?? Enumerable.Empty<ImageDto>())
                {
                    <img class="admin-img-thumb" data-path="@item.DataUrl"
                         src="@(item.DataUrl ?? Url.Action("Thumb", "Images", item.Id))"/>
                }
            </div>
        </div>
    </div>
    <div class="col-md-5">
        <h3>@Model.Name</h3>
        <div class="table-responsive">
            <table class="table table-striped border">
                <thead>
                <tr>
                    <th scope="col">Параметр</th>
                    <th scope="col">Значение</th>
                </tr>
                </thead>
                <tbody>
                @Html.DisplayForModel("TableDataRowDisplay", new {htmlAttributes = new {@class = "admin-view"}})
                </tbody>
            </table>
        </div>
    </div>
</div>
<div>
    <span class="h3 d-block">Категории</span>
    @foreach (var cat in Model.Categories ?? Enumerable.Empty<CategoryDto>())
    {
        <span class="font-weight-bold">@cat.Name</span>
        @Html.Raw(" : ")<span>@cat.Description</span>
        <br/>
    }
</div>
<div class="admin-item-descriptions">
    <span class="h3">Описания</span>
    @{
        foreach (var descGroup in Model.DescriptionGroups ?? Enumerable.Empty<DescriptionGroupDto>())
        {
            <div class="my-2">
                <span class="h6">@descGroup.Name</span>@Html.Raw(" : ")<span>@descGroup.Descriptions.Single().Value</span>
            </div>
            foreach (var child in descGroup.Children ?? Enumerable.Empty<DescriptionGroupDto>())
            {
                <span class="">@child.Name</span>
                @Html.Raw(" : ")<span>@child.Descriptions.Single().Value</span>
                <br/>
            }
        }
    }
</div>