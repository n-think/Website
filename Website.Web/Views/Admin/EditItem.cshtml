@{
    ViewData["Title"] = "Редактирование товара";
}

@model EditItemViewModel

<div>
    <h2 class="d-inline-block">Редактирование товара</h2>
    <button class="btn btn-outline-success w-auto mx-2 my-2" id="edit-form-submit" onclick="validateAndSubmitJson()">Сохранить</button>
    <a class="btn btn-outline-danger my-2" asp-action="ViewItem" asp-route-id="@Model.Id">Отмена</a>
</div>
<div asp-validation-summary="All" class="text-danger"></div>
<form asp-action="EditItem" id="edit-form">
    <input asp-for="Timestamp" type="hidden" class="form-control" />
    <div class="row">
        <div class="col-lg-7">
            <div class="d-flex">
                <div class="d-inline-block w-100">
                    <div class="admin-img-box m-0 p-1">
                        @{var image = Model.Images?.FirstOrDefault(x => x.Primary);}
                        <img id="admin-image-view" class="@(image == null ? "" : "img-primary")"
                             data-id="@image?.Id" src="@(image?.PathSrc)" alt="Нет изображения" />
                        <span></span>
                    </div>
                    <div class="admin-img-thumbs my-2" id="image-container">
                        @foreach (var item in Model.Images ?? Enumerable.Empty<ProductImageDto>())
                        {
                            <img class="admin-img-thumb m-2 border@(item.Primary ? " img-primary" : "")@(item.DtoState == DtoState.Added ? " img-add" : "")@(item.DtoState == DtoState.Deleted ? " img-delete" : "")"
                                 data-path="@item.PathSrc" data-id="@(item.Id ?? Guid.NewGuid().GetHashCode())" src="@(item.ThumbPathSrc)" />
                        }
                    </div>
                </div>
                <div class="p-1 w-auto">
                    <div class="btn btn-outline-danger my-2 p-1 d-block" id="image-remove-button">
                        <span class="d-block w-100 fa fa-remove fa-bordered fa-3x"></span>
                        <span class="d-inline-block text-truncate small">Удалить/<br />отменить<br>картинку</span>
                    </div>
                    <div class="btn btn-outline-success my-2 p-1 d-block" id="image-primary-button">
                        <span class="d-block w-100 fa fa-check fa-bordered fa-3x"></span>
                        <span class="d-inline-block small">Сделать<br />основной<br />картинкой</span>
                    </div>
                </div>
            </div>
            <div>
                <div class="custom-file my-2">
                    <input class="custom-file-input" id="file-upload-button" lang="" accept="image/*" type="file" multiple />
                    <label class="custom-file-label" for="file-upload-button">Загрузить файлы</label>
                </div>
            </div>
        </div>
        <div class="col-lg-5">
            <h3>@Model.Name</h3>
            <table class="table table-striped border">
                <thead>
                    <tr>
                        <th scope="col">Параметр</th>
                        <th scope="col">Значение</th>
                    </tr>
                </thead>
                <tbody class="tab-content">
                    <tr>
                        <th scope="row"><label asp-for="Id"></label></th>
                        <td>@Model.Id<input asp-for="Id" type="hidden" /></td>
                    </tr>
                    @Html.EditorForModel("TableDataRowEdit", new { htmlAttributes = new { @class = "form-control admin-edit w-auto" } })
                    <tr>
                        <th scope="row"><label asp-for="Enabled"></label></th>
                        <td>
                            <input class="form-control admin-edit w-auto" id="Enabled" name="Enabled" type="checkbox" data-val="true" value="true" @(Model.Enabled ? " checked=\" checked\"" : "" ) />
                        </td>
                        <td hidden><input id="EnabledHidden" name="Enabled" type="checkbox" value="false" /></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div>
        <div class="admin-item-categories">
            <div>
                <span class="h3">Категории</span>
                <span class="btn btn-outline-primary btn-sm mb-2"><span class="fa fa-plus"></span></span>
            </div>
            @foreach (var cat in Model.Categories ?? Enumerable.Empty<CategoryDto>())
            {
                <div class="category">
                    <span class="category-name">@cat.Name</span>
                    <span class="category-desc text-muted">(@cat.Description)</span><br/>
                </div>
            }
        </div>
        <div class="admin-item-descriptions">
            <div>
                <span class="h3">Описания</span>
                <span class="btn btn-outline-primary btn-sm mb-2"><span class="fa fa-plus"></span></span>
            </div>
            @foreach (var descriptionGroup in Model.Descriptions ?? Enumerable.Empty<DescriptionGroupDto>())
            {
            <div class="desc-group">
                <span class="desc-group-name h6">@descriptionGroup.Name</span>
                <span class="add-desc-item btn btn-outline-primary btn-xsm mb-1" data-desc-group-id="@descriptionGroup.Id"><span class="fa fa-plus"></span></span>
                <span class="desc-group-desc text-muted">(@descriptionGroup.Description)</span>
                @foreach (var item in descriptionGroup.Items ?? Enumerable.Empty<DescriptionItemDto>())
                {
                    <div class="desc-item">
                        <span class="desc-item-name">@item.Name</span>@Html.Raw(" : ")<span class="desc-item-value">@item.Value</span>
                    </div>
                }
            </div>
            }
        </div>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}