@using Castle.Core.Internal
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Website.Service.Interfaces
@using Website.Service.Services
@using Website.Web.Models

@inject SignInManager SignInManager
@inject IUserManager UserManager
@inject IAuthorizationService AuthorizationService

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if ((await AuthorizationService.AuthorizeAsync(User, "Administrators")).Succeeded)
            {
                <li><a asp-area="" asp-controller="Admin" asp-action="Index" title="Панель управления"><span class="glyphicon glyphicon glyphicon-cog"></span> Администирование</a></li>
            }
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Profile" title="Управление аккаунтом">
                    <span class="glyphicon glyphicon-user"></span>
                    @{
                        string fullName = User.FindFirst(c => c.Type == "FullName")?.Value;
                        @(fullName?.Length > 3 ? fullName : UserManager.GetUserName(User))
                    }
                </a>
            </li>
            <li><a href="#"><span class="glyphicon glyphicon-shopping-cart"></span> Корзина</a></li>
            <li>
                <button id="logoutButton" type="submit" class="btn btn-link navbar-btn navbar-link">Выход</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a href="#"><span class="glyphicon glyphicon-shopping-cart"></span> Корзина</a></li>
        <li><a asp-area="" asp-controller="Account" asp-action="Register">Регистрация</a></li>
        <li id="loginButton"><a asp-area="" asp-controller="Account" asp-action="Login">Вход</a></li>
    </ul>
}
